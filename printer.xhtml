<script>
    xover.listener.on('print', async function () {
        event.preventDefault();
        let target = this instanceof Node && !(this instanceof Document) && this || document.querySelector('main > article') || document.querySelector('main') || document.body;
        let content = target.cloneNode(true);
        content.querySelectorAll('del,.hidden,.non-printable').toArray().remove();
        content.style.width = "100%";
        content.style.height = "100%";
        content.style.overflow = 'visible'

        function copyStyles(sourceDoc, targetDoc) {
            Array.from(sourceDoc.styleSheets).forEach(styleSheet => {
                let rules;
                try {
                    rules = styleSheet.cssRules;
                } catch (e) {
                    return; // Cross-origin stylesheet
                }
                if (rules) {
                    const newStyleEl = targetDoc.createElement('style');
                    Array.from(rules).forEach(rule => {
                        newStyleEl.appendChild(targetDoc.createTextNode(rule.cssText));
                    });
                    targetDoc.head.appendChild(newStyleEl);
                }
            });
        }

        let printWindow = window.open('', '', 'width=1000,height=800');

        printWindow.document.write('<html><head><title>Print Content</title>');
        printWindow.document.write('</head><body>');
        printWindow.document.write('</body></html>');
        printWindow.document.body.appendChild(content)
        printWindow.document.body.style.padding = '20px';

        // Close the document to ensure all content is written
        printWindow.document.close();

        copyStyles(document, printWindow.document);

        printWindow.onload = function () {
            printWindow.focus(); // Required for some browsers
            printWindow.print();
            setTimeout(function () {
                printWindow.close(); // Delay closing the window
            }, 1000); // Allow some time for print dialog to show
        };
    })
</script>
<style>
    @media print {
        /* Apply to all elements or specific classes/elements */
        body,
        .element-with-background {
            -webkit-print-color-adjust: exact; /* For WebKit-based browsers */
            print-color-adjust: exact; /* Standard property */
        }
    }
</style>
<template shadowrootmode="open" role="button" class="btn">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-printer" viewBox="0 0 16 16" onclick="document.dispatch('print')">
        <path d="M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1" />
        <path d="M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1" />
    </svg>
</template>